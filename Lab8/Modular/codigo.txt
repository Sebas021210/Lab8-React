TABLERO.JS

import React, { Component, useState, useEffect } from "react";
import shuffle from 'lodash.shuffle';
import Cartas from "./Cartas.js";
import { images } from '../imagenes.js';
import "./styles/Tablero.css";

export default class Tablero extends Component {
  state = {
    cards: [],
    firstCard: {},
    secondCard: {},
    disabledCards: [],
    unflippedCards: [],
  }

  shuffleArray = (array) => {
    let newArray = array.slice(0, 16);
    for (let i = newArray.length - 1; i > 0; i--) {
      let j = Math.floor(Math.random() * (i + 1));
      let temp = newArray[i];
      newArray[i] = newArray[j];
      newArray[j] = temp;
    }
    return newArray;
  }

  componentDidMount() {
    const cartas = images.map((image) => ({
      lenguaje: image.lenguaje,
      id: image.id,
      src: image.src,
    }));

    const cartasDuplicadas = cartas.concat(cartas);
    const cartasMezcladas = this.shuffleArray(cartasDuplicadas);
    this.setState({ cards: cartasMezcladas });
  }

  componentDidUpdate() {
    this.checkMatch();
  }

  checkMatch = () => {
    const { firstCard, secondCard } = this.state;
    if (firstCard.id && secondCard.id){
      const match = firstCard.lenguaje === secondCard.lenguaje;
      const newCards = this.state.cards.map(card => {
        if (card.id === firstCard.id || card.id === secondCard.id) {
          return {
            ...card,
            isFlipped: true,
          };
        }
        return card;
      });
      this.setState({
        cards: newCards,
      });
      if (match) {
        this.disableCards();
      } else {
        this.unflipCards();
        setTimeout(() => {
          this.setState({
            firstCard: {...firstCard, isFlipped: false},
            secondCard: {...secondCard, isFlipped: false},
          });
        }, 1000);
      }
    }
  }
  

  disableCards = () => {
    const { firstCard, secondCard, disabledCards } = this.state;
    this.setState({
      disabledCards: [...disabledCards, firstCard.id, secondCard.id],
      firstCard: {},
      secondCard: {},
    });
  };

  unflipCards = () => {
    const { firstCard, secondCard } = this.state;
    const newCards = this.state.cards.map((card) => {
      if (card.id === firstCard.id || card.id === secondCard.id) {
        return {
          ...card,
          isFlipped: false,
        };
      } else {
        if (!this.state.disabledCards.includes(card.id)) {
          return {
            ...card,
            isFlipped: false,
          };
        }
        return card;
      }
    });
    this.setState({
      cards: newCards,
      firstCard: {},
      secondCard: {},
      unflippedCards: [...this.state.unflippedCards, firstCard.id, secondCard.id],
    });
  };    

  handleClick = (number, name) => {
    const { firstCard, secondCard, disabledCards, unflippedCards } = this.state;
    if (disabledCards.includes(number) || unflippedCards.includes(number)) {
      return;
    }
    if (Object.keys(firstCard).length === 0) {
      this.setState({ firstCard: { number, name } });
    } else if (Object.keys(secondCard).length === 0) {
      this.setState({ secondCard: { number, name } }, () => {
        const { firstCard, secondCard } = this.state;
        if (firstCard.name === secondCard.name) {
          this.disableCards();
        } else {
          setTimeout(() => {
            this.unflipCards();
          }, 1000);
        }
      });
    }
  }

  render() {
    const { cards, firstCard, secondCard, unflippedCards, disabledCards } = this.state;
  
    return (
      <div id="tablero">
        {cards.map((carta) => (
          <Cartas
            name={carta.lenguaje}
            number={carta.id}
            frontFace={carta.src}
            unflippedCards={unflippedCards}
            disabledCards={disabledCards}
          />
        ))}
      </div>
    );
  }  
}  

---------------------------------------------------------------------------------------------------------------------

CARTAS.JS

import React, { Component } from "react";
import ReactCardFlip from 'react-card-flip';
import backFace from "../imagenes/card.png";
import "./styles/Cartas.css";

export default class Cartas extends Component {
  constructor(props) {
    super(props);
    this.state = {
      isFlipped: false
    };
    this.handleClick = this.handleClick.bind(this);
  }

  componentDidUpdate(prevProps) {
    const { unflippedCards, number, disabledCards } = this.props;
    if (unflippedCards.includes(number) && prevProps.unflippedCards !== unflippedCards) {
      setTimeout(() => this.setState({ isFlipped: false }), 700);
    }
    if (disabledCards.includes(number) && this.state.isFlipped) {
      this.setState({ isFlipped: false });
    }
}

  
  handleClick(e) {
    e.preventDefault();
    const { disabledCards, number } = this.props;
    if (!disabledCards.includes(number)) {
      this.setState(prevState => ({ isFlipped: !prevState.isFlipped }));
    }
  }

  render() {
    const { name, number, frontFace, unflippedCards, disabledCards } = this.props;
    const { isFlipped } = this.state;

    return (
      <div className='card' >
        <ReactCardFlip isFlipped={isFlipped} >
          <img className='card-image' src={backFace} alt='back-face' onClick={this.handleClick}/>
          <img className='card-image' src={frontFace} alt='front-face' onClick={this.handleClick}/>
        </ReactCardFlip>
      </div>
    );
  }
}
